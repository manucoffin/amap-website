// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7CzphteDn95cERg7nN7EAF
// Component: 8XNt3BOtDt
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: dTKTvnUQf8/component
import LinkButton from "../../LinkButton"; // plasmic-import: ln-1hqOKZ9u/component
import AmapDescriptionBlock from "../../AmapDescriptionBlock"; // plasmic-import: uZnVkj7Gzvz/component
import ListItem from "../../ListItem"; // plasmic-import: 6y2iAxc2rc/component
import Footer from "../../Footer"; // plasmic-import: OWIENifDVhJ/component

import { useScreenVariants as useScreenVariantshaBl5ZeVufY } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: HABl5zeVufY/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_amap_website.module.css"; // plasmic-import: 7CzphteDn95cERg7nN7EAF/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 8XNt3BOtDt/css

import StadiumsvgIcon from "./icons/PlasmicIcon__Stadiumsvg"; // plasmic-import: E5VKiMd8l/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  h1?: p.Flex<"h1">;
  scrollDownButton?: p.Flex<typeof LinkButton>;
  sectionAmapDescription?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  sectionHistoireAmap?: p.Flex<"div">;
  colibrisImg?: p.Flex<typeof p.PlasmicImg>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshaBl5ZeVufY()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"AMAP de la Goutte d'Eau - Accueil"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"AMAP de la Goutte d'Eau - Accueil"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__ssu9H)}>
              <Header
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames("__wab_instance", sty.header)}
              />

              <div className={classNames(projectcss.all, sty.freeBox__kGeKe)}>
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Des paniers bio\nqui font vivre\nles agriculteurs locaux"}
                </h1>

                <LinkButton
                  data-plasmic-name={"scrollDownButton"}
                  data-plasmic-override={overrides.scrollDownButton}
                  className={classNames("__wab_instance", sty.scrollDownButton)}
                  href={"#qu-est-ce-qu-une-amap" as const}
                  label={"Découvrir l'Amap" as const}
                  radius={"normal" as const}
                  size={"lg" as const}
                  type={"outlined" as const}
                />
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"sectionAmapDescription"}
              data-plasmic-override={overrides.sectionAmapDescription}
              className={classNames(projectcss.all, sty.sectionAmapDescription)}
              id={"qu-est-ce-qu-une-amap" as const}
            >
              <div className={classNames(projectcss.all, sty.freeBox__zUc5V)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__recme
                  )}
                >
                  {"Qu'est-ce qu'une AMAP?"}
                </h2>

                <div
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__lx7Kq)}
                  >
                    <AmapDescriptionBlock
                      className={classNames(
                        "__wab_instance",
                        sty.amapDescriptionBlock__w4Wd0
                      )}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__dw44X)}
                  >
                    <AmapDescriptionBlock
                      className={classNames(
                        "__wab_instance",
                        sty.amapDescriptionBlock__i2I0A
                      )}
                      slot={
                        <React.Fragment>
                          <StadiumsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fDbZi
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nwj5X
                            )}
                          >
                            {"2"}
                          </div>
                        </React.Fragment>
                      }
                      slot2={"Écologique"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__bcp4K
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__uRg0U
                          )}
                        >
                          {
                            "Une production respectueuse de la nature, de l’environnement et de l’animal"
                          }
                        </ListItem>
                      </li>

                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__pza3S
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__edDZu
                          )}
                        >
                          {"L’appui à l’agriculture paysanne locale"}
                        </ListItem>
                      </li>

                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__ewicI
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__t0TuQ
                          )}
                        >
                          {
                            "Une production de dimension humaine adaptée aux types de culture et d’élevage"
                          }
                        </ListItem>
                      </li>
                    </AmapDescriptionBlock>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___9K8DV)}
                  >
                    <AmapDescriptionBlock
                      className={classNames(
                        "__wab_instance",
                        sty.amapDescriptionBlock__baYiN
                      )}
                      slot={
                        <React.Fragment>
                          <StadiumsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fTxY
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ev3O
                            )}
                          >
                            {"3"}
                          </div>
                        </React.Fragment>
                      }
                      slot2={"Qualitative"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__twgBt
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__gWhmR
                          )}
                        >
                          {
                            "Information fréquente du consommateur sur les produits"
                          }
                        </ListItem>
                      </li>

                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__vCnnF
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__gakyC
                          )}
                        >
                          {
                            "Une bonne qualité des produits : gustative, sanitaire, environnementale"
                          }
                        </ListItem>
                      </li>
                    </AmapDescriptionBlock>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__idwWv)}
                  >
                    <AmapDescriptionBlock
                      className={classNames(
                        "__wab_instance",
                        sty.amapDescriptionBlock__irrx1
                      )}
                      slot={
                        <React.Fragment>
                          <StadiumsvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__iPi0E
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__geKqb
                            )}
                          >
                            {"4"}
                          </div>
                        </React.Fragment>
                      }
                      slot2={"Sociale"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__twftI
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem__olym6
                          )}
                        >
                          {
                            "Respect des normes sociales par rapport aux employés de l’exploitation, y compris le personnel temporaire"
                          }
                        </ListItem>
                      </li>

                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__aUane
                        )}
                      >
                        <ListItem
                          className={classNames(
                            "__wab_instance",
                            sty.listItem___8LJ5
                          )}
                        >
                          {
                            "Une sensibilisation des adhérents de l’AMAP aux particularités de l’agriculture paysanne"
                          }
                        </ListItem>
                      </li>
                    </AmapDescriptionBlock>
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"sectionHistoireAmap"}
              data-plasmic-override={overrides.sectionHistoireAmap}
              className={classNames(projectcss.all, sty.sectionHistoireAmap)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__n6W2
                )}
              >
                {"L'AMAP de la Goutte d'Eau"}
              </h2>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___7K26)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5A7T1
                  )}
                >
                  {
                    'Tout commence par un terrible incendie dans la jungle. Tous les animaux sont impuissants, tétanisés par l’ampleur des dégâts. Le lion, roi des animaux, conduit dignement son peuple en sécurité de l’autre côté du fleuve. De là, les animaux regardent, impuissants et malheureux, brûler leur "maison" et leur "garde-manger".\n\nSeul, un petit colibri va et vient, sans relâche, de la berge du fleuve à la forêt en flammes,de la forêt en flammes à la berge du fleuve. Il transporte à chaque fois une goutte d’eau dans son bec.\n\n" Hé ! lui crie le tatou, que fais-tu ? Tu ne crois pas qu’à toi tout seul, tu vas pouvoir éteindre un incendie pareil ? "\n"Non, lui répond le colibri mais\n\n"J’aurai fait ma part !"\n\nNée le 8 mars 2006, l’AMAP de la Goutte d’Eau, au travers de ses adhérents - producteurs et consommateurs - tente de faire sa part dans les objectifs qui sont les siens et espère que toutes les petites gouttes d’eau ruisselant de par le monde feront un jour déborder le vase !'
                  }
                </div>

                <p.PlasmicImg
                  data-plasmic-name={"colibrisImg"}
                  data-plasmic-override={overrides.colibrisImg}
                  alt={"Image d'un colibri" as const}
                  className={classNames(sty.colibrisImg)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/amap_website/images/colibripng.png",
                    fullWidth: 400,
                    fullHeight: 400,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
            </div>
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "h1",
    "scrollDownButton",
    "sectionAmapDescription",
    "columns",
    "sectionHistoireAmap",
    "colibrisImg",
    "footer"
  ],
  header: ["header"],
  h1: ["h1"],
  scrollDownButton: ["scrollDownButton"],
  sectionAmapDescription: ["sectionAmapDescription", "columns"],
  columns: ["columns"],
  sectionHistoireAmap: ["sectionHistoireAmap", "colibrisImg"],
  colibrisImg: ["colibrisImg"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  h1: "h1";
  scrollDownButton: typeof LinkButton;
  sectionAmapDescription: "div";
  columns: "div";
  sectionHistoireAmap: "div";
  colibrisImg: typeof p.PlasmicImg;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    scrollDownButton: makeNodeComponent("scrollDownButton"),
    sectionAmapDescription: makeNodeComponent("sectionAmapDescription"),
    columns: makeNodeComponent("columns"),
    sectionHistoireAmap: makeNodeComponent("sectionHistoireAmap"),
    colibrisImg: makeNodeComponent("colibrisImg"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
